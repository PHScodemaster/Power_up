// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4949.PowerUp.subsystems;

import org.usfirst.frc4949.PowerUp.Robot;
import org.usfirst.frc4949.PowerUp.RobotMap;
import org.usfirst.frc4949.PowerUp.Logging;
import org.usfirst.frc4949.PowerUp.commands.*;
import edu.wpi.first.wpilibj.command.Subsystem;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Drive extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final SpeedController rMotor = RobotMap.driveRMotor;
    private final SpeedController lMotor = RobotMap.driveLMotor;
    private final DifferentialDrive differentialDrive1 = RobotMap.driveDifferentialDrive1;
    private final Encoder rMEncoder_1 = RobotMap.driveRMEncoder_1;
    private final Encoder lMEncoder_2 = RobotMap.driveLMEncoder_2;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
   
    @Override
    public void initDefaultCommand() {
    	
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new Drive_With_Joystick());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    	
        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public void arcDrive(){
    	double xSpeed = Robot.oi.joystick1.getX();
    	double zRotation = Robot.oi.joystick1.getY();
    	differentialDrive1.arcadeDrive(xSpeed, zRotation);
    	/*double encoder1 = getrMEncoder_1();
    	double encoder2 = getlMEncoder_2();
    	Logging.consoleLog("%s,%d,%f,%f,%f,%f",
    			"Hope",
    			System.currentTimeMillis(),
    			xSpeed,
    			zRotation,
    			encoder1,
    			encoder2);*/
    	
    }
    public double getlMEncoder_2(){
    	return lMEncoder_2.getDistance();
    	
    }
   public double getrMEncoder_1(){
	   return rMEncoder_1.getDistance();
   }

}

